class Solution {
public:
    bool isleaf(TreeNode* root)
    {
        if(root->left==NULL && root->right==NULL)
        {
            return true;
        }
        return false;
    }

    void inorder(TreeNode* root,int target,int &flag)
    { 
          if(root==NULL)
          {
              return ;
          }

          inorder(root->left,target,flag);

          if(root->left && root->left->val==target && isleaf(root->left))
          {
              root->left=NULL;
              flag=1;
          }
          if(root->right && root->right->val==target && isleaf(root->right))
          {
              root->right=NULL;
              flag=1;
          }
           inorder(root->right,target,flag);
    }

    
    TreeNode* removeLeafNodes(TreeNode* root, int target) {


        int flag=1;

        while(flag==1)
        {
            flag=0;
            inorder(root,target,flag);
        }
        if(root->val==target && isleaf(root))
        {
            return NULL;
        }

        return root;

        
    }
};
